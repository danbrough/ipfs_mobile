// Code generated by gobind. DO NOT EDIT.

// Java class go.kipfs.files.Directory is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java -javapkg=go.kipfs github.com/ipfs/go-ipfs-files
//go:build  linux || windows 
//+build linux, windows 
package go.kipfs.files;

import go.Seq;

/**
 * Directory is a special file which can link to any number of files.
 */
public interface Directory extends Node, go.kipfs.core.Closer {
	public void close() throws Exception;
	/**
	 * Entries returns a stateful iterator over directory entries.
	
	Example usage:
	
	it := dir.Entries()
	for it.Next() {
	  name := it.Name()
	  file := it.Node()
	  [...]
	}
	if it.Err() != nil {
	  return err
	}
	
	Note that you can&#39;t store the result of it.Node() and use it after
	advancing the iterator
	 */
	public DirIterator entries();
	public long size() throws Exception;
	
}

